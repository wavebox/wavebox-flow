diff --git a/node_modules/webpack/.DS_Store b/node_modules/webpack/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/webpack/lib/ProvidePlugin.js b/node_modules/webpack/lib/ProvidePlugin.js
index 8373389..1142e1f 100644
--- a/node_modules/webpack/lib/ProvidePlugin.js
+++ b/node_modules/webpack/lib/ProvidePlugin.js
@@ -41,9 +41,28 @@ class ProvidePlugin {
 					ProvidedDependency,
 					new ProvidedDependency.Template()
 				);
+
+				// Wavebox patch to provide us with a dynamic import of classes
+				const rewriteWaveboxDynamicRequest = (parser, request) => {
+					switch (request[0]) {
+						// classes, should just import the module of the same filename
+						case 'Â£classes': {
+							const path = require('path')
+							const resourceName = parser.state.current.resource
+							const moduleName = path.basename(resourceName, path.extname(resourceName))
+							return [
+								`./${moduleName}.module.less`,
+								'default'
+							]
+						}
+						default: return request
+					}
+				}
+
 				const handler = (parser, parserOptions) => {
 					Object.keys(definitions).forEach(name => {
 						const request = [].concat(definitions[name]);
+						const originalRequest = request
 						const splittedName = name.split(".");
 						if (splittedName.length > 0) {
 							splittedName.slice(1).forEach((_, i) => {
@@ -53,6 +72,9 @@ class ProvidePlugin {
 						}
 
 						parser.hooks.expression.for(name).tap("ProvidePlugin", expr => {
+							// Wavebox - rewrite dynamic imports
+							const request = rewriteWaveboxDynamicRequest(parser, originalRequest)
+
 							const nameIdentifier = name.includes(".")
 								? `__webpack_provided_${name.replace(/\./g, "_dot_")}`
 								: name;
@@ -68,9 +90,13 @@ class ProvidePlugin {
 						});
 
 						parser.hooks.call.for(name).tap("ProvidePlugin", expr => {
+							// Wavebox - rewrite dynamic imports
+							const request = rewriteWaveboxDynamicRequest(parser, originalRequest)
+
 							const nameIdentifier = name.includes(".")
 								? `__webpack_provided_${name.replace(/\./g, "_dot_")}`
 								: name;
+							//console.log(">>>",request)
 							const dep = new ProvidedDependency(
 								request[0],
 								nameIdentifier,
